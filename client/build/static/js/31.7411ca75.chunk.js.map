{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-nav_2.entry.js","../node_modules/@ionic/core/dist/esm-es5/framework-delegate-d1eb6504.js"],"names":["ViewController","component","params","this","state","prototype","init","container","__awaiter","_a","__generator","_b","label","element","attachComponent","delegate","sent","_destroy","assert","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","currentParams","keysA","Object","keys","keysB","length","_i","keysA_1","key","convertToView","page","Nav","hostRef","registerInstance","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","ionNavWillLoad","createEvent","ionNavWillChange","ionNavDidChange","swipeGestureChanged","gesture","enable","swipeGesture","rootChanged","root","setRoot","rootParams","componentWillLoad","document","querySelector","el","closest","mode","getIonMode","config","getBoolean","emit","componentDidLoad","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","componentDidUnload","lifecycle","LIFECYCLE_WILL_UNLOAD","destroy","push","componentProps","opts","done","queueTrns","insertStart","insertViews","insert","insertIndex","insertPages","insertComponents","pop","removeStart","removeCount","popTo","indexOrViewCtrl","tiConfig","removeView","popToRoot","removeIndex","startIndex","setPages","setRouteId","direction","animation","resolve","_this","active","getActiveSync","Promise","changed","finish","promise","r","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","v","assign","animationBuilder","getRouteId","tagName","getActive","getByIndex","index","canGoBack","canGoBackSync","getPrevious","getPreviousSync","getLength","indexOf","ti","skipIfBusy","reject","nextTrns","success","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","router","navChanged","failed","rejectReason","shift","runTransition","rejectReason_1","trys","prepareTI","getEnteringView","Error","postViewInit","enteringRequiresTransition","leavingRequiresTransition","transition","viewsLength","viewControllers","map","filter","viewControllers_1","removeEnd","i","destroyQueue","finalBalance","console","warn","insertViews_1","insertViewAt","destroyQueue_1","LIFECYCLE_WILL_LEAVE","LIFECYCLE_DID_LEAVE","destroyQueue_2","destroyView","progressCallback","leavingEl","animationOpts","progressAnimation","ani","sbAni","showGoBack","baseEl","get","transitionFinish","cleanupView","cleanup","existingIndex","splice","activeView","activeViewIndex","setPageHidden","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","getTimeGivenProgression","easing","progressEnd","render","h","defineProperty","getElement","enumerable","configurable","style","NavLink","routerDirection","onClick","routerAnimation","navLink","Host","cssClasses","attachViewToDom","HTMLElement","ownerDocument","createElement","forEach","c","classList","add","appendChild","componentOnReady","detachComponent"],"mappings":"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","file":"static/js/31.7411ca75.chunk.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, c as createEvent, h, e as getElement, H as Host } from './index-29df6f59.js';\nimport { b as getIonMode, c as config } from './ionic-global-08f4fb8a.js';\nimport { b as assert } from './helpers-5c745fbd.js';\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-66edb21f.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-685f606a.js';\nimport { a as attachComponent } from './framework-delegate-d1eb6504.js';\nvar VIEW_STATE_NEW = 1;\nvar VIEW_STATE_ATTACHED = 2;\nvar VIEW_STATE_DESTROYED = 3;\nvar ViewController = /** @class */ (function () {\n    function ViewController(component, params) {\n        this.component = component;\n        this.params = params;\n        this.state = VIEW_STATE_NEW;\n    }\n    ViewController.prototype.init = function (container) {\n        return __awaiter(this, void 0, void 0, function () {\n            var component, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.state = VIEW_STATE_ATTACHED;\n                        if (!!this.element) return [3 /*break*/, 2];\n                        component = this.component;\n                        _a = this;\n                        return [4 /*yield*/, attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params)];\n                    case 1:\n                        _a.element = _b.sent();\n                        _b.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * DOM WRITE\n     */\n    ViewController.prototype._destroy = function () {\n        assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n        var element = this.element;\n        if (element) {\n            if (this.delegate) {\n                this.delegate.removeViewFromDom(element.parentElement, element);\n            }\n            else {\n                element.remove();\n            }\n        }\n        this.nav = undefined;\n        this.state = VIEW_STATE_DESTROYED;\n    };\n    return ViewController;\n}());\nvar matches = function (view, id, params) {\n    if (!view) {\n        return false;\n    }\n    if (view.component !== id) {\n        return false;\n    }\n    var currentParams = view.params;\n    if (currentParams === params) {\n        return true;\n    }\n    if (!currentParams && !params) {\n        return true;\n    }\n    if (!currentParams || !params) {\n        return false;\n    }\n    var keysA = Object.keys(currentParams);\n    var keysB = Object.keys(params);\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n    // Test for A's keys different from B.\n    for (var _i = 0, keysA_1 = keysA; _i < keysA_1.length; _i++) {\n        var key = keysA_1[_i];\n        if (currentParams[key] !== params[key]) {\n            return false;\n        }\n    }\n    return true;\n};\nvar convertToView = function (page, params) {\n    if (!page) {\n        return null;\n    }\n    if (page instanceof ViewController) {\n        return page;\n    }\n    return new ViewController(page, params);\n};\nvar convertToViews = function (pages) {\n    return pages.map(function (page) {\n        if (page instanceof ViewController) {\n            return page;\n        }\n        if ('page' in page) {\n            return convertToView(page.page, page.params);\n        }\n        return convertToView(page, undefined);\n    }).filter(function (v) { return v !== null; });\n};\nvar navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\";\nvar Nav = /** @class */ (function () {\n    function Nav(hostRef) {\n        registerInstance(this, hostRef);\n        this.transInstr = [];\n        this.animationEnabled = true;\n        this.useRouter = false;\n        this.isTransitioning = false;\n        this.destroyed = false;\n        this.views = [];\n        /**\n         * If `true`, the nav should animate the transition of components.\n         */\n        this.animated = true;\n        this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n        this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n        this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n    }\n    Nav.prototype.swipeGestureChanged = function () {\n        if (this.gesture) {\n            this.gesture.enable(this.swipeGesture === true);\n        }\n    };\n    Nav.prototype.rootChanged = function () {\n        if (this.root !== undefined) {\n            if (!this.useRouter) {\n                this.setRoot(this.root, this.rootParams);\n            }\n        }\n    };\n    Nav.prototype.componentWillLoad = function () {\n        this.useRouter =\n            !!document.querySelector('ion-router') &&\n                !this.el.closest('[no-router]');\n        if (this.swipeGesture === undefined) {\n            var mode = getIonMode(this);\n            this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n        }\n        this.ionNavWillLoad.emit();\n    };\n    Nav.prototype.componentDidLoad = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.rootChanged();\n                        _a = this;\n                        return [4 /*yield*/, import('./swipe-back-0a6a44c8.js')];\n                    case 1:\n                        _a.gesture = (_b.sent()).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n                        this.swipeGestureChanged();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Nav.prototype.componentDidUnload = function () {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var view = _a[_i];\n            lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            view._destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        // release swipe back gesture and transition\n        this.transInstr.length = this.views.length = 0;\n        this.destroyed = true;\n    };\n    /**\n     * Push a new component onto the current navigation stack. Pass any additional\n     * information along as an object. This additional information is accessible\n     * through NavParams.\n     *\n     * @param component The component to push onto the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    Nav.prototype.push = function (component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: -1,\n            insertViews: [{ page: component, params: componentProps }],\n            opts: opts\n        }, done);\n    };\n    /**\n     * Inserts a component into the navigation stack at the specified index.\n     * This is useful to add a component at any point in the navigation stack.\n     *\n     * @param insertIndex The index to insert the component at in the stack.\n     * @param component The component to insert into the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    Nav.prototype.insert = function (insertIndex, component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: [{ page: component, params: componentProps }],\n            opts: opts\n        }, done);\n    };\n    /**\n     * Inserts an array of components into the navigation stack at the specified index.\n     * The last component in the array will become instantiated as a view, and animate\n     * in to become the active view.\n     *\n     * @param insertIndex The index to insert the components at in the stack.\n     * @param insertComponents The components to insert into the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    Nav.prototype.insertPages = function (insertIndex, insertComponents, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: insertComponents,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Pop a component off of the navigation stack. Navigates back from the current\n     * component.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    Nav.prototype.pop = function (opts, done) {\n        return this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Pop to a specific index in the navigation stack.\n     *\n     * @param indexOrViewCtrl The index or view controller to pop to.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    Nav.prototype.popTo = function (indexOrViewCtrl, opts, done) {\n        var tiConfig = {\n            removeStart: -1,\n            removeCount: -1,\n            opts: opts\n        };\n        if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n            tiConfig.removeView = indexOrViewCtrl;\n            tiConfig.removeStart = 1;\n        }\n        else if (typeof indexOrViewCtrl === 'number') {\n            tiConfig.removeStart = indexOrViewCtrl + 1;\n        }\n        return this.queueTrns(tiConfig, done);\n    };\n    /**\n     * Navigate back to the root of the stack, no matter how far back that is.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    Nav.prototype.popToRoot = function (opts, done) {\n        return this.queueTrns({\n            removeStart: 1,\n            removeCount: -1,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Removes a component from the navigation stack at the specified index.\n     *\n     * @param startIndex The number to begin removal at.\n     * @param removeCount The number of components to remove.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    Nav.prototype.removeIndex = function (startIndex, removeCount, opts, done) {\n        if (removeCount === void 0) { removeCount = 1; }\n        return this.queueTrns({\n            removeStart: startIndex,\n            removeCount: removeCount,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Set the root for the current navigation stack to a component.\n     *\n     * @param component The component to set as the root of the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    Nav.prototype.setRoot = function (component, componentProps, opts, done) {\n        return this.setPages([{ page: component, params: componentProps }], opts, done);\n    };\n    /**\n     * Set the views of the current navigation stack and navigate to the last view.\n     * By default animations are disabled, but they can be enabled by passing options\n     * to the navigation controller. Navigation parameters can also be passed to the\n     * individual pages in the array.\n     *\n     * @param views The list of views to set as the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    Nav.prototype.setPages = function (views, opts, done) {\n        if (opts == null) {\n            opts = {};\n        }\n        // if animation wasn't set to true then default it to NOT animate\n        if (opts.animated !== true) {\n            opts.animated = false;\n        }\n        return this.queueTrns({\n            insertStart: 0,\n            insertViews: views,\n            removeStart: 0,\n            removeCount: -1,\n            opts: opts\n        }, done);\n    };\n    /** @internal */\n    Nav.prototype.setRouteId = function (id, params, direction, animation) {\n        var _this = this;\n        var active = this.getActiveSync();\n        if (matches(active, id, params)) {\n            return Promise.resolve({\n                changed: false,\n                element: active.element\n            });\n        }\n        var resolve;\n        var promise = new Promise(function (r) { return (resolve = r); });\n        var finish;\n        var commonOpts = {\n            updateURL: false,\n            viewIsReady: function (enteringEl) {\n                var mark;\n                var p = new Promise(function (r) { return (mark = r); });\n                resolve({\n                    changed: true,\n                    element: enteringEl,\n                    markVisible: function () { return __awaiter(_this, void 0, void 0, function () {\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    mark();\n                                    return [4 /*yield*/, finish];\n                                case 1:\n                                    _a.sent();\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); }\n                });\n                return p;\n            }\n        };\n        if (direction === 'root') {\n            finish = this.setRoot(id, params, commonOpts);\n        }\n        else {\n            var viewController = this.views.find(function (v) { return matches(v, id, params); });\n            if (viewController) {\n                finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\n            }\n            else if (direction === 'forward') {\n                finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\n            }\n            else if (direction === 'back') {\n                finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\n            }\n        }\n        return promise;\n    };\n    /** @internal */\n    Nav.prototype.getRouteId = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var active;\n            return __generator(this, function (_a) {\n                active = this.getActiveSync();\n                return [2 /*return*/, active\n                        ? {\n                            id: active.element.tagName,\n                            params: active.params,\n                            element: active.element\n                        }\n                        : undefined];\n            });\n        });\n    };\n    /**\n     * Get the active view.\n     */\n    Nav.prototype.getActive = function () {\n        return Promise.resolve(this.getActiveSync());\n    };\n    /**\n     * Get the view at the specified index.\n     *\n     * @param index The index of the view.\n     */\n    Nav.prototype.getByIndex = function (index) {\n        return Promise.resolve(this.views[index]);\n    };\n    /**\n     * Returns `true` if the current view can go back.\n     *\n     * @param view The view to check.\n     */\n    Nav.prototype.canGoBack = function (view) {\n        return Promise.resolve(this.canGoBackSync(view));\n    };\n    /**\n     * Get the previous view.\n     *\n     * @param view The view to get.\n     */\n    Nav.prototype.getPrevious = function (view) {\n        return Promise.resolve(this.getPreviousSync(view));\n    };\n    Nav.prototype.getLength = function () {\n        return this.views.length;\n    };\n    Nav.prototype.getActiveSync = function () {\n        return this.views[this.views.length - 1];\n    };\n    Nav.prototype.canGoBackSync = function (view) {\n        if (view === void 0) { view = this.getActiveSync(); }\n        return !!(view && this.getPreviousSync(view));\n    };\n    Nav.prototype.getPreviousSync = function (view) {\n        if (view === void 0) { view = this.getActiveSync(); }\n        if (!view) {\n            return undefined;\n        }\n        var views = this.views;\n        var index = views.indexOf(view);\n        return index > 0 ? views[index - 1] : undefined;\n    };\n    // _queueTrns() adds a navigation stack change to the queue and schedules it to run:\n    // 1. _nextTrns(): consumes the next transition in the queue\n    // 2. _viewInit(): initializes enteringView if required\n    // 3. _viewTest(): ensures canLeave/canEnter Returns `true`, so the operation can continue\n    // 4. _postViewInit(): add/remove the views from the navigation stack\n    // 5. _transitionInit(): initializes the visual transition if required and schedules it to run\n    // 6. _viewAttachToDOM(): attaches the enteringView to the DOM\n    // 7. _transitionStart(): called once the transition actually starts, it initializes the Animation underneath.\n    // 8. _transitionFinish(): called once the transition finishes\n    // 9. _cleanup(): syncs the navigation internal state with the DOM. For example it removes the pages from the DOM or hides/show them.\n    Nav.prototype.queueTrns = function (ti, done) {\n        if (this.isTransitioning && ti.opts != null && ti.opts.skipIfBusy) {\n            return Promise.resolve(false);\n        }\n        var promise = new Promise(function (resolve, reject) {\n            ti.resolve = resolve;\n            ti.reject = reject;\n        });\n        ti.done = done;\n        // Normalize empty\n        if (ti.insertViews && ti.insertViews.length === 0) {\n            ti.insertViews = undefined;\n        }\n        // Enqueue transition instruction\n        this.transInstr.push(ti);\n        // if there isn't a transition already happening\n        // then this will kick off this transition\n        this.nextTrns();\n        return promise;\n    };\n    Nav.prototype.success = function (result, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        if (ti.done) {\n            ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n        }\n        ti.resolve(result.hasCompleted);\n        if (ti.opts.updateURL !== false && this.useRouter) {\n            var router = document.querySelector('ion-router');\n            if (router) {\n                var direction = result.direction === 'back' ? 'back' : 'forward';\n                router.navChanged(direction);\n            }\n        }\n    };\n    Nav.prototype.failed = function (rejectReason, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        this.transInstr.length = 0;\n        this.fireError(rejectReason, ti);\n    };\n    Nav.prototype.fireError = function (rejectReason, ti) {\n        if (ti.done) {\n            ti.done(false, false, rejectReason);\n        }\n        if (ti.reject && !this.destroyed) {\n            ti.reject(rejectReason);\n        }\n        else {\n            ti.resolve(false);\n        }\n    };\n    Nav.prototype.nextTrns = function () {\n        // this is the framework's bread 'n butta function\n        // only one transition is allowed at any given time\n        if (this.isTransitioning) {\n            return false;\n        }\n        // there is no transition happening right now\n        // get the next instruction\n        var ti = this.transInstr.shift();\n        if (!ti) {\n            return false;\n        }\n        this.runTransition(ti);\n        return true;\n    };\n    Nav.prototype.runTransition = function (ti) {\n        return __awaiter(this, void 0, void 0, function () {\n            var leavingView, enteringView, requiresTransition, isBackDirection, result, _a, rejectReason_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 6, , 7]);\n                        // set that this nav is actively transitioning\n                        this.ionNavWillChange.emit();\n                        this.isTransitioning = true;\n                        this.prepareTI(ti);\n                        leavingView = this.getActiveSync();\n                        enteringView = this.getEnteringView(ti, leavingView);\n                        if (!leavingView && !enteringView) {\n                            throw new Error('no views in the stack to be removed');\n                        }\n                        if (!(enteringView && enteringView.state === VIEW_STATE_NEW)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, enteringView.init(this.el)];\n                    case 1:\n                        _b.sent();\n                        _b.label = 2;\n                    case 2:\n                        this.postViewInit(enteringView, leavingView, ti);\n                        requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) &&\n                            enteringView !== leavingView;\n                        if (requiresTransition && ti.opts && leavingView) {\n                            isBackDirection = ti.opts.direction === 'back';\n                            /**\n                             * If heading back, use the entering page's animation\n                             * unless otherwise specified by the developer.\n                             */\n                            if (isBackDirection) {\n                                ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView && enteringView.animationBuilder);\n                            }\n                            leavingView.animationBuilder = ti.opts.animationBuilder;\n                        }\n                        if (!requiresTransition) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.transition(enteringView, leavingView, ti)];\n                    case 3:\n                        _a = _b.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        _a = {\n                            // transition is not required, so we are already done!\n                            // they're inserting/removing the views somewhere in the middle or\n                            // beginning, so visually nothing needs to animate/transition\n                            // resolve immediately because there's no animation that's happening\n                            hasCompleted: true,\n                            requiresTransition: false\n                        };\n                        _b.label = 5;\n                    case 5:\n                        result = _a;\n                        this.success(result, ti);\n                        this.ionNavDidChange.emit();\n                        return [3 /*break*/, 7];\n                    case 6:\n                        rejectReason_1 = _b.sent();\n                        this.failed(rejectReason_1, ti);\n                        return [3 /*break*/, 7];\n                    case 7:\n                        this.isTransitioning = false;\n                        this.nextTrns();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Nav.prototype.prepareTI = function (ti) {\n        var viewsLength = this.views.length;\n        ti.opts = ti.opts || {};\n        if (ti.opts.delegate === undefined) {\n            ti.opts.delegate = this.delegate;\n        }\n        if (ti.removeView !== undefined) {\n            assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n            assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n            var index = this.views.indexOf(ti.removeView);\n            if (index < 0) {\n                throw new Error('removeView was not found');\n            }\n            ti.removeStart += index;\n        }\n        if (ti.removeStart !== undefined) {\n            if (ti.removeStart < 0) {\n                ti.removeStart = viewsLength - 1;\n            }\n            if (ti.removeCount < 0) {\n                ti.removeCount = viewsLength - ti.removeStart;\n            }\n            ti.leavingRequiresTransition =\n                ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n        }\n        if (ti.insertViews) {\n            // allow -1 to be passed in to auto push it on the end\n            // and clean up the index if it's larger then the size of the stack\n            if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n                ti.insertStart = viewsLength;\n            }\n            ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n        }\n        var insertViews = ti.insertViews;\n        if (!insertViews) {\n            return;\n        }\n        assert(insertViews.length > 0, 'length can not be zero');\n        var viewControllers = convertToViews(insertViews);\n        if (viewControllers.length === 0) {\n            throw new Error('invalid views to insert');\n        }\n        // Check all the inserted view are correct\n        for (var _i = 0, viewControllers_1 = viewControllers; _i < viewControllers_1.length; _i++) {\n            var view = viewControllers_1[_i];\n            view.delegate = ti.opts.delegate;\n            var nav = view.nav;\n            if (nav && nav !== this) {\n                throw new Error('inserted view was already inserted');\n            }\n            if (view.state === VIEW_STATE_DESTROYED) {\n                throw new Error('inserted view was already destroyed');\n            }\n        }\n        ti.insertViews = viewControllers;\n    };\n    Nav.prototype.getEnteringView = function (ti, leavingView) {\n        var insertViews = ti.insertViews;\n        if (insertViews !== undefined) {\n            // grab the very last view of the views to be inserted\n            // and initialize it as the new entering view\n            return insertViews[insertViews.length - 1];\n        }\n        var removeStart = ti.removeStart;\n        if (removeStart !== undefined) {\n            var views = this.views;\n            var removeEnd = removeStart + ti.removeCount;\n            for (var i = views.length - 1; i >= 0; i--) {\n                var view = views[i];\n                if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n                    return view;\n                }\n            }\n        }\n        return undefined;\n    };\n    Nav.prototype.postViewInit = function (enteringView, leavingView, ti) {\n        assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n        assert(ti.resolve, 'resolve must be valid');\n        assert(ti.reject, 'reject must be valid');\n        var opts = ti.opts;\n        var insertViews = ti.insertViews;\n        var removeStart = ti.removeStart;\n        var removeCount = ti.removeCount;\n        var destroyQueue;\n        // there are views to remove\n        if (removeStart !== undefined && removeCount !== undefined) {\n            assert(removeStart >= 0, 'removeStart can not be negative');\n            assert(removeCount >= 0, 'removeCount can not be negative');\n            destroyQueue = [];\n            for (var i = 0; i < removeCount; i++) {\n                var view = this.views[i + removeStart];\n                if (view && view !== enteringView && view !== leavingView) {\n                    destroyQueue.push(view);\n                }\n            }\n            // default the direction to \"back\"\n            opts.direction = opts.direction || 'back';\n        }\n        var finalBalance = this.views.length +\n            (insertViews !== undefined ? insertViews.length : 0) -\n            (removeCount !== undefined ? removeCount : 0);\n        assert(finalBalance >= 0, 'final balance can not be negative');\n        if (finalBalance === 0) {\n            console.warn(\"You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.\", this, this.el);\n            throw new Error('navigation stack needs at least one root page');\n        }\n        // At this point the transition can not be rejected, any throw should be an error\n        // there are views to insert\n        if (insertViews) {\n            // add the views to the\n            var insertIndex = ti.insertStart;\n            for (var _i = 0, insertViews_1 = insertViews; _i < insertViews_1.length; _i++) {\n                var view = insertViews_1[_i];\n                this.insertViewAt(view, insertIndex);\n                insertIndex++;\n            }\n            if (ti.enteringRequiresTransition) {\n                // default to forward if not already set\n                opts.direction = opts.direction || 'forward';\n            }\n        }\n        // if the views to be removed are in the beginning or middle\n        // and there is not a view that needs to visually transition out\n        // then just destroy them and don't transition anything\n        // batch all of lifecycles together\n        // let's make sure, callbacks are zoned\n        if (destroyQueue && destroyQueue.length > 0) {\n            for (var _a = 0, destroyQueue_1 = destroyQueue; _a < destroyQueue_1.length; _a++) {\n                var view = destroyQueue_1[_a];\n                lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n                lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n                lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            }\n            // once all lifecycle events has been delivered, we can safely detroy the views\n            for (var _b = 0, destroyQueue_2 = destroyQueue; _b < destroyQueue_2.length; _b++) {\n                var view = destroyQueue_2[_b];\n                this.destroyView(view);\n            }\n        }\n    };\n    Nav.prototype.transition = function (enteringView, leavingView, ti) {\n        return __awaiter(this, void 0, void 0, function () {\n            var opts, progressCallback, mode, enteringEl, leavingEl, animationOpts, hasCompleted;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        opts = ti.opts;\n                        progressCallback = opts.progressAnimation\n                            ? function (ani) { return _this.sbAni = ani; }\n                            : undefined;\n                        mode = getIonMode(this);\n                        enteringEl = enteringView.element;\n                        leavingEl = leavingView && leavingView.element;\n                        animationOpts = Object.assign({ mode: mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, animationBuilder: this.animation || opts.animationBuilder || config.get('navAnimation'), progressCallback: progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl: enteringEl,\n                            leavingEl: leavingEl }, opts);\n                        return [4 /*yield*/, transition(animationOpts)];\n                    case 1:\n                        hasCompleted = (_a.sent()).hasCompleted;\n                        return [2 /*return*/, this.transitionFinish(hasCompleted, enteringView, leavingView, opts)];\n                }\n            });\n        });\n    };\n    Nav.prototype.transitionFinish = function (hasCompleted, enteringView, leavingView, opts) {\n        var cleanupView = hasCompleted ? enteringView : leavingView;\n        if (cleanupView) {\n            this.cleanup(cleanupView);\n        }\n        return {\n            hasCompleted: hasCompleted,\n            requiresTransition: true,\n            enteringView: enteringView,\n            leavingView: leavingView,\n            direction: opts.direction\n        };\n    };\n    Nav.prototype.insertViewAt = function (view, index) {\n        var views = this.views;\n        var existingIndex = views.indexOf(view);\n        if (existingIndex > -1) {\n            // this view is already in the stack!!\n            // move it to its new location\n            assert(view.nav === this, 'view is not part of the nav');\n            views.splice(index, 0, views.splice(existingIndex, 1)[0]);\n        }\n        else {\n            assert(!view.nav, 'nav is used');\n            // this is a new view to add to the stack\n            // create the new entering view\n            view.nav = this;\n            // insert the entering view into the correct index in the stack\n            views.splice(index, 0, view);\n        }\n    };\n    Nav.prototype.removeView = function (view) {\n        assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n        var views = this.views;\n        var index = views.indexOf(view);\n        assert(index > -1, 'view must be part of the stack');\n        if (index >= 0) {\n            views.splice(index, 1);\n        }\n    };\n    Nav.prototype.destroyView = function (view) {\n        view._destroy();\n        this.removeView(view);\n    };\n    /**\n     * DOM WRITE\n     */\n    Nav.prototype.cleanup = function (activeView) {\n        // ok, cleanup time!! Destroy all of the views that are\n        // INACTIVE and come after the active view\n        // only do this if the views exist, though\n        if (this.destroyed) {\n            return;\n        }\n        var views = this.views;\n        var activeViewIndex = views.indexOf(activeView);\n        for (var i = views.length - 1; i >= 0; i--) {\n            var view = views[i];\n            var element = view.element;\n            if (i > activeViewIndex) {\n                // this view comes after the active view\n                // let's unload it\n                lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n                this.destroyView(view);\n            }\n            else if (i < activeViewIndex) {\n                // this view comes before the active view\n                // and it is not a portal then ensure it is hidden\n                setPageHidden(element, true);\n            }\n        }\n    };\n    Nav.prototype.canStart = function () {\n        return (!!this.swipeGesture &&\n            !this.isTransitioning &&\n            this.transInstr.length === 0 &&\n            this.animationEnabled &&\n            this.canGoBackSync());\n    };\n    Nav.prototype.onStart = function () {\n        this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts: {\n                direction: 'back',\n                progressAnimation: true\n            }\n        }, undefined);\n    };\n    Nav.prototype.onMove = function (stepValue) {\n        if (this.sbAni) {\n            this.sbAni.progressStep(stepValue);\n        }\n    };\n    Nav.prototype.onEnd = function (shouldComplete, stepValue, dur) {\n        var _this = this;\n        if (this.sbAni) {\n            this.animationEnabled = false;\n            this.sbAni.onFinish(function () {\n                _this.animationEnabled = true;\n            }, { oneTimeCallback: true });\n            // Account for rounding errors in JS\n            var newStepValue = (shouldComplete) ? -0.001 : 0.001;\n            /**\n             * Animation will be reversed here, so need to\n             * reverse the easing curve as well\n             *\n             * Additionally, we need to account for the time relative\n             * to the new easing curve, as `stepValue` is going to be given\n             * in terms of a linear curve.\n             */\n            if (!shouldComplete) {\n                this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n                newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n            }\n            else {\n                newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n            }\n            this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n        }\n    };\n    Nav.prototype.render = function () {\n        return (h(\"slot\", null));\n    };\n    Object.defineProperty(Nav.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Nav, \"watchers\", {\n        get: function () {\n            return {\n                \"swipeGesture\": [\"swipeGestureChanged\"],\n                \"root\": [\"rootChanged\"]\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Nav;\n}());\nNav.style = navCss;\nvar navLink = function (el, routerDirection, component, componentProps, routerAnimation) {\n    var nav = el.closest('ion-nav');\n    if (nav) {\n        if (routerDirection === 'forward') {\n            if (component !== undefined) {\n                return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n            }\n        }\n        else if (routerDirection === 'root') {\n            if (component !== undefined) {\n                return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n            }\n        }\n        else if (routerDirection === 'back') {\n            return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\n        }\n    }\n    return Promise.resolve(false);\n};\nvar NavLink = /** @class */ (function () {\n    function NavLink(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /**\n         * The transition direction when navigating to another page.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = function () {\n            return navLink(_this.el, _this.routerDirection, _this.component, _this.componentProps, _this.routerAnimation);\n        };\n    }\n    NavLink.prototype.render = function () {\n        return (h(Host, { onClick: this.onClick }));\n    };\n    Object.defineProperty(NavLink.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: false,\n        configurable: true\n    });\n    return NavLink;\n}());\nexport { Nav as ion_nav, NavLink as ion_nav_link };\n","import { __awaiter, __generator } from \"tslib\";\nvar attachComponent = function (delegate, container, component, cssClasses, componentProps) { return __awaiter(void 0, void 0, void 0, function () {\n    var el;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (delegate) {\n                    return [2 /*return*/, delegate.attachViewToDom(container, component, componentProps, cssClasses)];\n                }\n                if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n                    throw new Error('framework delegate is missing');\n                }\n                el = (typeof component === 'string')\n                    ? container.ownerDocument && container.ownerDocument.createElement(component)\n                    : component;\n                if (cssClasses) {\n                    cssClasses.forEach(function (c) { return el.classList.add(c); });\n                }\n                if (componentProps) {\n                    Object.assign(el, componentProps);\n                }\n                container.appendChild(el);\n                if (!el.componentOnReady) return [3 /*break*/, 2];\n                return [4 /*yield*/, el.componentOnReady()];\n            case 1:\n                _a.sent();\n                _a.label = 2;\n            case 2: return [2 /*return*/, el];\n        }\n    });\n}); };\nvar detachComponent = function (delegate, element) {\n    if (element) {\n        if (delegate) {\n            var container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\nexport { attachComponent as a, detachComponent as d };\n"],"sourceRoot":""}